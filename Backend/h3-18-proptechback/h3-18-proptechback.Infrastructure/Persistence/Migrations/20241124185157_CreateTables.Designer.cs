// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using h3_18_proptechback.Infrastructure.Persistence.Data;

#nullable disable

namespace h3_18_proptechback.Infrastructure.Persistence.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20241124185157_CreateTables")]
    partial class CreateTables
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("h3_18_proptechback.Domain.DataGuarantor", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("CUIT")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("DNI")
                        .HasColumnType("text");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsComplete")
                        .HasColumnType("boolean");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PassportID")
                        .HasColumnType("text");

                    b.Property<Guid>("UserID")
                        .HasColumnType("uuid");

                    b.HasKey("ID");

                    b.ToTable("DataGuarantors");
                });

            modelBuilder.Entity("h3_18_proptechback.Domain.DataUser", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("CUIT")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("DNI")
                        .HasColumnType("text");

                    b.Property<bool>("IsComplete")
                        .HasColumnType("boolean");

                    b.Property<string>("PassportID")
                        .HasColumnType("text");

                    b.Property<Guid>("UserID")
                        .HasColumnType("uuid");

                    b.HasKey("ID");

                    b.ToTable("DataUsers");
                });

            modelBuilder.Entity("h3_18_proptechback.Domain.DocumentsGuarantor", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("BackDNIURL")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("DataGuarantorID")
                        .HasColumnType("uuid");

                    b.Property<string>("FrontDNIURL")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PhotoURL")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ProofAddressURL")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("SalaryURL")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("ID");

                    b.HasIndex("DataGuarantorID");

                    b.ToTable("DocumentsGuarantors");
                });

            modelBuilder.Entity("h3_18_proptechback.Domain.DocumentsUser", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("BackDNIURL")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("DataUserID")
                        .HasColumnType("uuid");

                    b.Property<string>("FrontDNIURL")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PhotoURL")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ProofAddressURL")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("SalaryURL")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("ID");

                    b.HasIndex("DataUserID");

                    b.ToTable("DocumentsUsers");
                });

            modelBuilder.Entity("h3_18_proptechback.Domain.DocumentsGuarantor", b =>
                {
                    b.HasOne("h3_18_proptechback.Domain.DataGuarantor", "DataGuarantor")
                        .WithMany("DocumentsGuarantors")
                        .HasForeignKey("DataGuarantorID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DataGuarantor");
                });

            modelBuilder.Entity("h3_18_proptechback.Domain.DocumentsUser", b =>
                {
                    b.HasOne("h3_18_proptechback.Domain.DataUser", "DataUser")
                        .WithMany("DocumentsUsers")
                        .HasForeignKey("DataUserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DataUser");
                });

            modelBuilder.Entity("h3_18_proptechback.Domain.DataGuarantor", b =>
                {
                    b.Navigation("DocumentsGuarantors");
                });

            modelBuilder.Entity("h3_18_proptechback.Domain.DataUser", b =>
                {
                    b.Navigation("DocumentsUsers");
                });
#pragma warning restore 612, 618
        }
    }
}
